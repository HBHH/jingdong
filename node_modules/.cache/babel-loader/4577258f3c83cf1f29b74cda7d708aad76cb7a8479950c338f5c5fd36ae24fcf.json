{"ast":null,"code":"import { createStore } from 'vuex';\n\n// 实现本地存储\nconst setLocalCartList = state => {\n  const {\n    cartList\n  } = state;\n  const cartListString = JSON.stringify(cartList);\n  localStorage.cartList = cartListString;\n};\nconst getLocalCartList = () => {\n  try {\n    return JSON.parse(localStorage.cartList) || {};\n  } catch (e) {\n    return {};\n  }\n};\nexport default createStore({\n  state: {\n    // cartList:{\n    //   shopId:{\n    //     shopNme:'沃尔玛',\n    //     productList:{\n    //        productId:{\n    //          _id: \"1\",\n    //          name: \"番茄 250g / 份\",\n    //          imgUrl: \"http://www.dell-lee.com/imgs/vue3/tomato.png\",\n    //          sales: 10,\n    //          price: 33.6,\n    //          oldPrice: 39.6,\n    //          count:2\n    //        }\n    //     }\n    // }\n    // cartList:{}\n    cartList: getLocalCartList()\n  },\n  getters: {},\n  mutations: {\n    changeCartItemInfo(state, pyload) {\n      const {\n        shopId,\n        productId,\n        productInfo\n      } = pyload;\n      // eslint-disable-next-line prefer-const\n      let shopInfo = state.cartList[shopId] || {\n        shopName: '',\n        productList: {}\n      };\n      // if(!shopInfo) {shopInfo={}}\n      let product = shopInfo.productList[productId];\n      if (!product) {\n        productInfo.count = 0;\n        product = productInfo;\n        // product.count = 0;\n      }\n\n      product.count = product.count + pyload.num;\n      if (pyload.num > 0) {\n        product.check = true;\n      }\n      // 等价于\n      // (pyload.num > 0) && (product.check = true);\n      if (product.count < 0) {\n        product.count = 0;\n      }\n      // 等价于\n      // (product.count < 0) && (product.count = 0);\n\n      shopInfo.productList[productId] = product;\n      state.cartList[shopId] = shopInfo;\n      setLocalCartList(state);\n    },\n    changeShopName(state, pyload) {\n      const {\n        shopId,\n        shopName\n      } = pyload;\n      const shopInfo = state.cartList[shopId] || {\n        shopName: '',\n        productList: {}\n      };\n      shopInfo.shopName = shopName;\n      state.cartList[shopId] = shopInfo;\n      setLocalCartList(state);\n    },\n    changeCartItemChecked(state, pyload) {\n      const {\n        shopId,\n        productId\n      } = pyload;\n      const product = state.cartList[shopId].productList[productId];\n      // console.log(product)\n      product.check = !product.check;\n      setLocalCartList(state);\n    },\n    cleanCartProducts(state, pyload) {\n      const {\n        shopId\n      } = pyload;\n      state.cartList[shopId].productList = {};\n    },\n    setCartItemsChecked(state, pyload) {\n      const {\n        shopId\n      } = pyload;\n      const products = state.cartList[shopId].productList;\n      if (products) {\n        for (const i in products) {\n          const product = products[i];\n          product.check = true;\n        }\n      }\n      setLocalCartList(state);\n    },\n    clearCartData(state, pyload) {\n      const {\n        shopId\n      } = pyload;\n      state.cartList[shopId].productList = [];\n    }\n  },\n  actions: {},\n  modules: {}\n});","map":{"version":3,"names":["createStore","setLocalCartList","state","cartList","cartListString","JSON","stringify","localStorage","getLocalCartList","parse","e","getters","mutations","changeCartItemInfo","pyload","shopId","productId","productInfo","shopInfo","shopName","productList","product","count","num","check","changeShopName","changeCartItemChecked","cleanCartProducts","setCartItemsChecked","products","i","clearCartData","actions","modules"],"sources":["D:/VsSpace/vue/jingdong/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n\n// 实现本地存储\nconst setLocalCartList = (state) => {\n  const { cartList } = state\n  const cartListString = JSON.stringify(cartList)\n  localStorage.cartList = cartListString\n}\nconst getLocalCartList = () => {\n  try {\n    return JSON.parse(localStorage.cartList) || {}\n  } catch (e) {\n    return {}\n  }\n}\nexport default createStore({\n  state: {\n  // cartList:{\n    //   shopId:{\n    //     shopNme:'沃尔玛',\n    //     productList:{\n    //        productId:{\n    //          _id: \"1\",\n    //          name: \"番茄 250g / 份\",\n    //          imgUrl: \"http://www.dell-lee.com/imgs/vue3/tomato.png\",\n    //          sales: 10,\n    //          price: 33.6,\n    //          oldPrice: 39.6,\n    //          count:2\n    //        }\n    //     }\n    // }\n    // cartList:{}\n    cartList: getLocalCartList()\n  },\n  getters: {\n  },\n  mutations: {\n    changeCartItemInfo (state, pyload) {\n      const { shopId, productId, productInfo } = pyload\n      // eslint-disable-next-line prefer-const\n      let shopInfo = state.cartList[shopId] || {\n        shopName: '',\n        productList: {}\n      }\n      // if(!shopInfo) {shopInfo={}}\n      let product = shopInfo.productList[productId]\n      if (!product) {\n        productInfo.count = 0\n        product = productInfo\n        // product.count = 0;\n      }\n      product.count = product.count + pyload.num\n\n      if (pyload.num > 0) { product.check = true }\n      // 等价于\n      // (pyload.num > 0) && (product.check = true);\n      if (product.count < 0) { product.count = 0 }\n      // 等价于\n      // (product.count < 0) && (product.count = 0);\n\n      shopInfo.productList[productId] = product\n      state.cartList[shopId] = shopInfo\n      setLocalCartList(state)\n    },\n    changeShopName (state, pyload) {\n      const { shopId, shopName } = pyload\n      const shopInfo = state.cartList[shopId] || {\n        shopName: '',\n        productList: {}\n      }\n      shopInfo.shopName = shopName\n      state.cartList[shopId] = shopInfo\n\n      setLocalCartList(state)\n    },\n    changeCartItemChecked (state, pyload) {\n      const { shopId, productId } = pyload\n      const product = state.cartList[shopId].productList[productId]\n      // console.log(product)\n      product.check = !product.check\n\n      setLocalCartList(state)\n    },\n    cleanCartProducts(state, pyload) {\n      const { shopId } = pyload\n      state.cartList[shopId].productList = {}\n    },\n\n    setCartItemsChecked (state, pyload) {\n      const { shopId } = pyload\n      const products = state.cartList[shopId].productList\n      if (products) {\n        for (const i in products) {\n          const product = products[i]\n          product.check = true\n        }\n      }\n      setLocalCartList(state)\n    },\n    clearCartData (state, pyload) {\n      const { shopId } = pyload\n      state.cartList[shopId].productList = []\n    }\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}