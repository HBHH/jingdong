{"ast":null,"code":"import { reactive, toRefs } from 'vue';\nimport Docker from '../../components/Docker';\nimport { get } from '../../utils/request';\n// 处理订单列表逻辑\nconst useOrderListEffect = () => {\n  const data = reactive({\n    list: []\n  });\n  const getOrderList = async () => {\n    const result = await get('/api/order');\n    if (result?.errno === 0 && result?.data?.length) {\n      const ordertList = result.data;\n      ordertList.forEach(order => {\n        const products = order.products || {};\n        let totalPrice = 0;\n        let totalNumber = 0;\n        products.forEach(productItem => {\n          totalNumber += productItem?.orderSales || 0;\n          totalPrice += productItem?.product?.price * productItem?.orderSales || 0;\n        });\n        order.totalPrice = totalPrice;\n        order.totalNumber = totalNumber;\n      });\n      data.list = result.data;\n    }\n  };\n  getOrderList();\n  const {\n    list\n  } = toRefs(data);\n  return {\n    list\n  };\n};\nexport default {\n  name: ' OrderList ',\n  components: {\n    Docker\n  },\n  setup() {\n    const {\n      list\n    } = useOrderListEffect();\n    return {\n      list\n    };\n  }\n};","map":{"version":3,"names":["reactive","toRefs","Docker","get","useOrderListEffect","data","list","getOrderList","result","errno","length","ordertList","forEach","order","products","totalPrice","totalNumber","productItem","orderSales","product","price","name","components","setup"],"sources":["D:\\VsSpace\\vue\\jingdong\\src\\views\\orderList\\OrderList.vue"],"sourcesContent":["<!--\r\n * @Author: your name\r\n * @Date: 2022-04-02 14:19:51\r\n * @LastEditTime: 2022-04-02 16:39:41\r\n * @LastEditors: Please set LastEditors\r\n * @Description: 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n * @FilePath: \\jingdongdaojia\\src\\views\\orderList\\OrderList.vue\r\n-->\r\n<template>\r\n    <div class=\"wrapper\">\r\n        <div class=\"title\">我的订单</div>\r\n        <div class=\"orders\">\r\n            <div\r\n                class=\"order\"\r\n                v-for=\"(item,index) in list\"\r\n                :key=\"index\"\r\n            >\r\n                <div class=\"order_title\">\r\n                    {{item.shopName}}\r\n                    <span class=\"order__status\">{{item.isCancled ? '已取消' : '已下单'}}</span>\r\n                </div>\r\n                <div class=\"order__content\">\r\n                    <div class=\"order__content__imgs\">\r\n                        <template\r\n                            v-for=\"(innerItem,innerIndex) in item.products\"\r\n                            :key=\"innerIndex\"\r\n                        >\r\n                            <img\r\n                                class=\"order__content__img\"\r\n                                :src=\"innerItem.product.img\"\r\n                                v-if=\"innerIndex<=3\"\r\n                            />\r\n                        </template>\r\n                    </div>\r\n                    <div class=\"order__content__info\">\r\n                        <div class=\"order__content__price\">￥{{item.totalPrice}}</div>\r\n                        <div class=\"order__content__count\">共 {{item.totalNumber}} 件</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <Docker :currentIndex=\"2\" />\r\n</template>\r\n\r\n<script>\r\nimport { reactive, toRefs } from 'vue'\r\nimport Docker from '../../components/Docker'\r\nimport { get } from '../../utils/request'\r\n// 处理订单列表逻辑\r\nconst useOrderListEffect = () => {\r\n  const data = reactive({ list: [] })\r\n  const getOrderList = async () => {\r\n    const result = await get('/api/order')\r\n    if (result?.errno === 0 && result?.data?.length) {\r\n      const ordertList = result.data\r\n      ordertList.forEach((order) => {\r\n        const products = order.products || {}\r\n        let totalPrice = 0\r\n        let totalNumber = 0\r\n        products.forEach((productItem) => {\r\n          totalNumber += (productItem?.orderSales || 0)\r\n          totalPrice += ((productItem?.product?.price * productItem?.orderSales) || 0)\r\n        })\r\n        order.totalPrice = totalPrice\r\n        order.totalNumber = totalNumber\r\n      })\r\n      data.list = result.data\r\n    }\r\n  }\r\n  getOrderList()\r\n  const { list } = toRefs(data)\r\n  return { list }\r\n}\r\nexport default {\r\n  name: ' OrderList ',\r\n  components: { Docker },\r\n  setup () {\r\n    const { list } = useOrderListEffect()\r\n    return { list }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../style/virables.scss\";\r\n.wrapper{\r\n  overflow-y: auto;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: .5rem;\r\n  right: 0;\r\n  background: rgb(248,248,248);\r\n}\r\n.title{\r\n    line-height: .44rem;\r\n    background: $bgColor-white;\r\n    font-size: .16rem;\r\n    color: $content-fontcolor;\r\n    text-align: center;\r\n}\r\n.order{\r\n    margin: .16rem .18rem;\r\n    padding: .16rem;\r\n    background: $bgColor-white;\r\n    &__title{\r\n        margin-bottom: .16rem;\r\n        line-height: .22rem;\r\n        font-size: .16rem;\r\n        color: $content-fontcolor;\r\n    }\r\n    &__status{\r\n        float: right;\r\n        font-size: .14rem;\r\n        color: $light-fontColor;\r\n    }\r\n    &__content{\r\n        display: flex;\r\n        &__imgs{\r\n            flex: 1;\r\n        }\r\n        &__img{\r\n            width: .4rem;\r\n            height: .4rem;\r\n            margin-right: .12rem;\r\n        }\r\n        &__info{\r\n            width: .7rem;\r\n        }\r\n        &__price{\r\n            margin-bottom: .04rem;\r\n            line-height: .2rem;\r\n            font-size: .14rem;\r\n            color: $highlight-fontColor;\r\n            text-align: right;\r\n        }\r\n        &__count{\r\n            font-size: .12rem;\r\n            color: $content-fontcolor;\r\n            text-align: right;\r\n            line-height: .14rem;\r\n        }\r\n    }\r\n}\r\n</style>\r\n"],"mappings":"AA8CA,SAASA,QAAQ,EAAEC,MAAK,QAAS,KAAI;AACrC,OAAOC,MAAK,MAAO,yBAAwB;AAC3C,SAASC,GAAE,QAAS,qBAAoB;AACxC;AACA,MAAMC,kBAAiB,GAAIA,CAAA,KAAM;EAC/B,MAAMC,IAAG,GAAIL,QAAQ,CAAC;IAAEM,IAAI,EAAE;EAAG,CAAC;EAClC,MAAMC,YAAW,GAAI,MAAAA,CAAA,KAAY;IAC/B,MAAMC,MAAK,GAAI,MAAML,GAAG,CAAC,YAAY;IACrC,IAAIK,MAAM,EAAEC,KAAI,KAAM,KAAKD,MAAM,EAAEH,IAAI,EAAEK,MAAM,EAAE;MAC/C,MAAMC,UAAS,GAAIH,MAAM,CAACH,IAAG;MAC7BM,UAAU,CAACC,OAAO,CAAEC,KAAK,IAAK;QAC5B,MAAMC,QAAO,GAAID,KAAK,CAACC,QAAO,IAAK,CAAC;QACpC,IAAIC,UAAS,GAAI;QACjB,IAAIC,WAAU,GAAI;QAClBF,QAAQ,CAACF,OAAO,CAAEK,WAAW,IAAK;UAChCD,WAAU,IAAMC,WAAW,EAAEC,UAAS,IAAK,CAAC;UAC5CH,UAAS,IAAOE,WAAW,EAAEE,OAAO,EAAEC,KAAI,GAAIH,WAAW,EAAEC,UAAU,IAAK,CAAC;QAC7E,CAAC;QACDL,KAAK,CAACE,UAAS,GAAIA,UAAS;QAC5BF,KAAK,CAACG,WAAU,GAAIA,WAAU;MAChC,CAAC;MACDX,IAAI,CAACC,IAAG,GAAIE,MAAM,CAACH,IAAG;IACxB;EACF;EACAE,YAAY,CAAC;EACb,MAAM;IAAED;EAAK,IAAIL,MAAM,CAACI,IAAI;EAC5B,OAAO;IAAEC;EAAK;AAChB;AACA,eAAe;EACbe,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE;IAAEpB;EAAO,CAAC;EACtBqB,KAAIA,CAAA,EAAK;IACP,MAAM;MAAEjB;IAAK,IAAIF,kBAAkB,CAAC;IACpC,OAAO;MAAEE;IAAK;EAChB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}