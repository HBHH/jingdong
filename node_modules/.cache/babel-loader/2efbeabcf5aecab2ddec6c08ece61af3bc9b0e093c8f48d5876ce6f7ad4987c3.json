{"ast":null,"code":"import { useStore } from 'vuex';\nimport { toRefs, computed } from 'vue';\n\n// 使用VueX数据, 【添加产品数据】到VueX 模块\nexport const useCommonCartEffect = shopId => {\n  const store = useStore();\n  const {\n    cartList\n  } = toRefs(store.state);\n  const changeCartItemInfo = (shopId, productId, productInfo, num) => {\n    // 触发事件，向VueX添加数据\n    store.commit('changeCartItemInfo', {\n      shopId,\n      productId,\n      productInfo,\n      num\n    });\n  };\n\n  // 从state 取出缓存的 购物车数据 商品列表\n  const cartProductList = computed(() => {\n    // 鲁棒性逻辑，若取不到数据，返回空数组\n    const productList = store.state.cartList[shopId]?.productList || {};\n    // const productList = cartList?.[shopId]?.productList || []\n\n    const notEmptyProductList = {};\n    for (const i in productList) {\n      const product = productList[i];\n      if (product.count > 0) {\n        notEmptyProductList[i] = product;\n      }\n    }\n    console.log(notEmptyProductList);\n    console.log('useCommonCartEffect cartProductList shopId --- ', shopId);\n    console.log('useCommonCartEffect cartProductList cartList --- ', cartList);\n    console.log('useCommonCartEffect cartProductList cartList[shopId] --- ', cartList[shopId]);\n    console.log('useCommonCartEffect cartProductList productList --- ', productList);\n    return notEmptyProductList;\n  });\n\n  // 从state 取出缓存的 购物车\n  const shopName = computed(() => {\n    // 鲁棒性逻辑，若取不到数据，返回空数组\n    const shopName = store.state.cartList[shopId]?.shopName || '';\n    // const productList = cartList?.[shopId]?.productList || []\n    console.log('useCommonCartEffect cartProductList shopId --- ', shopId);\n    console.log('useCommonCartEffect cartProductList shopName --- ', shopName);\n    return shopName;\n  });\n\n  // 总数、总价、全选按钮判定，三合一\n  // 【因为重复逻辑很多, 都是要获取 并遍历 产品列表，对每个迭代进行处理】\n  const cartCalculations = computed(() => {\n    // const productList = cartList[shopId]?.productList\n    const productList = store.state.cartList[shopId]?.productList;\n    const result = {\n      total: 0,\n      price: 0,\n      allChecked: true\n    };\n    if (productList) {\n      for (const i in productList) {\n        const product = productList[i];\n\n        // 计算总数\n        result.total += product.count;\n        // 选中的才加入总价\n        if (product.check) {\n          result.price += product.count * product.price;\n        }\n        // 这个产品有在购物车中【count > 0】 且 ，没被选中\n        if (product.count > 0 && !product.check) {\n          result.allChecked = false;\n        }\n      }\n    }\n    result.price = result.price.toFixed(2);\n    console.log('cartList total --- ', result.total);\n    console.log('cartList totalPrice --- ', result.price);\n    return result;\n  });\n  return {\n    cartList,\n    shopName,\n    cartProductList,\n    cartCalculations,\n    changeCartItemInfo\n  };\n};","map":{"version":3,"names":["useStore","toRefs","computed","useCommonCartEffect","shopId","store","cartList","state","changeCartItemInfo","productId","productInfo","num","commit","cartProductList","productList","notEmptyProductList","i","product","count","console","log","shopName","cartCalculations","result","total","price","allChecked","check","toFixed"],"sources":["D:/VsSpace/vue/jingdong/src/effects/commonCartEffect.js"],"sourcesContent":["import { useStore } from 'vuex'\r\nimport { toRefs, computed } from 'vue'\r\n\r\n// 使用VueX数据, 【添加产品数据】到VueX 模块\r\nexport const useCommonCartEffect = (shopId) => {\r\n  const store = useStore()\r\n  const { cartList } = toRefs(store.state)\r\n\r\n  const changeCartItemInfo = (shopId, productId, productInfo, num) => {\r\n    // 触发事件，向VueX添加数据\r\n    store.commit('changeCartItemInfo', {\r\n      shopId, productId, productInfo, num\r\n    })\r\n  }\r\n\r\n  // 从state 取出缓存的 购物车数据 商品列表\r\n  const cartProductList = computed(() => {\r\n    // 鲁棒性逻辑，若取不到数据，返回空数组\r\n    const productList = store.state.cartList[shopId]?.productList || {}\r\n    // const productList = cartList?.[shopId]?.productList || []\r\n\r\n    const notEmptyProductList = {}\r\n    for (const i in productList) {\r\n      const product = productList[i]\r\n      if (product.count > 0) {\r\n        notEmptyProductList[i] = product\r\n      }\r\n    }\r\n    console.log(notEmptyProductList)\r\n\r\n    console.log('useCommonCartEffect cartProductList shopId --- ', shopId)\r\n    console.log('useCommonCartEffect cartProductList cartList --- ', cartList)\r\n    console.log('useCommonCartEffect cartProductList cartList[shopId] --- ', cartList[shopId])\r\n    console.log('useCommonCartEffect cartProductList productList --- ', productList)\r\n    return notEmptyProductList\r\n  })\r\n\r\n  // 从state 取出缓存的 购物车\r\n  const shopName = computed(() => {\r\n    // 鲁棒性逻辑，若取不到数据，返回空数组\r\n    const shopName = store.state.cartList[shopId]?.shopName || ''\r\n    // const productList = cartList?.[shopId]?.productList || []\r\n    console.log('useCommonCartEffect cartProductList shopId --- ', shopId)\r\n    console.log('useCommonCartEffect cartProductList shopName --- ', shopName)\r\n    return shopName\r\n  })\r\n\r\n  // 总数、总价、全选按钮判定，三合一\r\n  // 【因为重复逻辑很多, 都是要获取 并遍历 产品列表，对每个迭代进行处理】\r\n  const cartCalculations = computed(() => {\r\n    // const productList = cartList[shopId]?.productList\r\n    const productList = store.state.cartList[shopId]?.productList\r\n    const result = { total: 0, price: 0, allChecked: true }\r\n    if (productList) {\r\n      for (const i in productList) {\r\n        const product = productList[i]\r\n\r\n        // 计算总数\r\n        result.total += product.count\r\n        // 选中的才加入总价\r\n        if (product.check) {\r\n          result.price += (product.count * product.price)\r\n        }\r\n        // 这个产品有在购物车中【count > 0】 且 ，没被选中\r\n        if (product.count > 0 && !product.check) {\r\n          result.allChecked = false\r\n        }\r\n      }\r\n    }\r\n    result.price = result.price.toFixed(2)\r\n    console.log('cartList total --- ', result.total)\r\n    console.log('cartList totalPrice --- ', result.price)\r\n\r\n    return result\r\n  })\r\n\r\n  return { cartList, shopName, cartProductList, cartCalculations, changeCartItemInfo }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}